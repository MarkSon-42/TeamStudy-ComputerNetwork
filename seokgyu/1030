## UDP 와 TCP 에 대해 간략히 설명해주세요

- UDP와 TCP는 `인터넷에서 데이터를 전송`하는 데 사용되는 두 가지 주요 `프로토콜`입니다.
    - UDP → 연결을 설정하지 않고 데이터를 독립적으로 전송합니다.
        - IP 헤더의 프로토콜 번호 : 17
        - 커넥션리스 타입
        - 신뢰성 낮음
        - 즉시성 빠름
    - TCP → 데이터 전송 전에 송신자와 수신자 간에 연결을 설정합니다.
        - P 헤더의 프로토콜 번호 : 6
        - 커넥션 타입
        - 신뢰성 낮음
        - 즉시성 느림
        

---

## UDP 패킷 포맷 중 체크섬에 관해 설명해주세요

- 체크섬은 데이터의 `무결성을 확인하기 위한 간단한 오류 검출 메커니즘`입니다. 데이터를 전송할 때, 송신자는 데이터의 바이트를 특정 방식으로 계산하여 체크섬 값을 생성합니다. 이 값은 데이터와 함께 전송됩니다.

---

## 체크섬의 작동 원리에 대해 설명해주세요

1. **계산**: 송신자가 데이터의 각 바이트를 더해 체크섬 값을 계산합니다.
2. **전송**: 데이터와 함께 계산된 체크섬을 수신자에게 전송합니다.
3. **검증**: 수신자는 받은 데이터에 대해 같은 방법으로 체크섬을 계산하고, 송신자가 보낸 체크섬과 비교합니다.
    - **일치**: 데이터가 손상되지 않았음을 의미합니다.
    - **불일치**: 데이터가 손상되었거나 오류가 발생했음을 나타냅니다.

체크섬은 간단하지만, 모든 오류를 잡아내는 것은 아니며, 주로 작은 오류를 검출하는 데 사용됩니다. UDP와 같은 프로토콜에서 체크섬은 데이터의 신뢰성을 높이는 역할을 합니다.

---

## 포트번호는 왜 중요한가요?

- 예를 들어 IP 헤더만 있으면 전세계 어떤 수신지에도 IP 패킷을 도달시킬 수 있습니다. 하지만 IP 패킷을 받은 단말은 그 IP 패킷을 어떤 애플리케이션에서 처리하면 좋을지 알지 못합니다.  그래서 네트워크에서는 포트번호를 사용합니다.  → 즉 포트번호가 있어야 어떤 애플리케이션에 데이터를 전달하면 좋을지 알 수 있게 됩니다.

---

## 시스템포트와 유저포트, 그리고 다이나믹/프라이빗 포트에 대해 알려주세요.

- **시스템 포트**: 잘 알려진 서비스(0~1023)
- **사용자 포트**: 등록된 서비스(1024~49151)
- **다이나믹/프라이빗 포트**: 임시 사용 포트(49152~65535)

### 시스템 포트 (Well-Known Ports)

- **범위**: 0 ~ 1023
- **용도**: `주로 시스템이나 잘 알려진 서비스`에 할당됩니다. 예를 들어, HTTP(80), HTTPS(443), FTP(21) 등이 있습니다.
- **특징**: 관리자 권한이 필요한 경우가 많으며, 표준화된 서비스가 사용합니다.

### 사용자 포트 (Registered Ports)

- **범위**: 1024 ~ 49151
- **용도**: `특정 응용 프로그램이나 서비스에 등록되어 사용`됩니다. 예를 들어, MySQL(3306), PostgreSQL(5432) 등이 있습니다.
- **특징**: `사용자나 개발자가 지정하여 사용할 수 있`으며, 일반적으로 특정 애플리케이션에 할당됩니다.

### 다이나믹 포트 (Dynamic Ports) 또는 프라이빗 포트 (Private Ports)

- **범위**: 49152 ~ 65535
- **용도**: 클라이언트 애플리케이션에서 임시로 사용되는 포트입니다. 서버와의 통신 후, 해당 포트를 해제하여 다른 클라이언트가 사용할 수 있습니다.
- **특징**: 일반적으로 운영 체제가 자동으로 할당하며, 고정된 서비스에 사용되지 않습니다.

---

## 방화벽이란 무엇인가요?

- 방화벽은 네트워크 보안을 강화하기 위해 설계된 시스템 또는 장치로, 외부와 내부 네트워크 간의 트래픽을 모니터링하고 제어하는 역할을 합니다. 즉 미리 설정한 규칙에 따라 통신을 식별하고 다양한 위협에서 시스템을 보호합니다.

---

## 3핸드쉐이크와 4핸드쉐이크의 차이를 설명하고 3핸드쉐이크에 대해서 설명해주세요

- 3핸드쉐이크는 TCP 연결을 설정하는 과정이고 4핸드쉐이크는 TCP 연결을 종료하는 과정이다.

- **SYN (Synchronize)**:
    - 클라이언트가 서버에 연결 요청을 보냅니다. 이 패킷에는 연결을 설정하겠다는 의도가 담겨 있습니다.
- **SYN-ACK (Synchronize-Acknowledge)**:
    - 서버가 클라이언트의 요청을 수신하고, 연결을 수락하는 응답을 보냅니다. 이 패킷은 클라이언트의 요청을 확인하고, 서버가 연결을 수립할 준비가 되었음을 나타냅니다.
- **ACK (Acknowledge)**:
    - 클라이언트가 서버의 응답을 확인하는 ACK 패킷을 보냅니다. 이 단계에서 클라이언트와 서버 간의 연결이 완전히 설정됩니다.

---

## TCP 패킷 포맷의 주요 요소에 대해 말해주세요. → 주요 요소 이름정도는 말해주세요 .. ㅠ

1. **포트 번호 (Source Port, Destination Port)**:
    - **소스 포트**: 송신자가 사용하는 포트 번호. 응답이 돌아올 때 사용됩니다.
    - **목적지 포트**: 수신자가 사용하는 포트 번호. 특정 서비스(예: 웹, 이메일)에 연결합니다.
2. **시퀀스 번호 (Sequence Number)**:
    - `데이터의 순서를 추적하는 번호`입니다. TCP는 데이터를 작은 조각으로 나누어 전송하므로, 이 번호로 각 조각의 순서를 정합니다.
3. **확인 응답 번호 (Acknowledgment Number)**:
    - `수신자가 마지막으로 제대로 받은 데이터의 시퀀스 번호`입니다. `이 번호는 다음에 기대하는 데이터의 번호`를 나타냅니다.
4. **데이터 오프셋 (Data Offset)**:
    - `TCP 헤더의 크기`를 나타냅니다. `데이터가 시작되는 위치를 알려`주며, 헤더가 몇 바이트인지 알 수 있게 해줍니다.
5. **제어 비트 (Control Bits)**:
    - 여러 개의 플래그가 포함되어 있습니다. 예를 들어:
        - **SYN**: 연결 설정을 요청할 때 사용.
        - **ACK**: 데이터 수신을 확인할 때 사용.
        - **FIN**: 연결 종료를 요청할 때 사용.
6. **윈도우 크기 (Window Size)**:
    - 수신자가 `처리할 수 있는 데이터의 양`을 나타냅니다. 이 값을 통해 송신자는 얼마나 많은 데이터를 전송할 수 있는지 결정합니다. 흐름 제어에 사용됩니다.
7. **체크섬 (Checksum)**:
    - `데이터의 무결성을 확인하기 위한 값`입니다. 송신자가 계산하여 전송하고, 수신자가 같은 방식으로 확인합니다. 만약 값이 다르면 데이터가 손상된 것입니다.
8. **긴급 포인터 (Urgent Pointer)**:
    - 긴급 데이터가 있을 때 사용됩니다. 긴급 데이터의 위치를 나타내며, `수신자가 즉시 처리해야 하는 데이터를 알려`줍니다.
9. **옵션 (Options)**:
    - 선택적으로 `추가적인 정보를 포함할 수 있는 부분`입니다. 예를 들어, 최대 세그먼트 크기(MSS)와 같은 정보가 포함될 수 있습니다.

---

## TCP 의 혼잡제어에 대해 설명해주세요

TCP의 **혼잡 제어**는 네트워크의 혼잡을 감지하고, 데이터 전송 속도를 조절하는 방법입니다.

### 주요 개념

- **혼잡 감지**: 패킷 손실이나 지연을 통해 네트워크가 혼잡해졌는지 확인합니다.
- **혼잡 윈도우**: 전송할 수 있는 데이터의 양을 조절하는 기준으로, 혼잡 상황에 따라 크기를 늘리거나 줄입니다.
- **목적**: 네트워크의 혼잡을 줄이고 데이터 전송의 신뢰성을 높이는 것입니다.

간단히 말해, TCP는 네트워크가 바쁠 때 전송 속도를 줄여서 데이터가 원활하게 전송되도록 합니다!
