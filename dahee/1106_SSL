SSL이란 무엇인가요?
SSL은 웹사이트와 브라우저 사이의 모든 데이터를 암호화하여 전송하는 보안 프로토콜입니다. 주로 개인정보 보호와 데이터 무결성을 보장하는데 사용됩니다.


SSL Handshake 과정을 설명해주세요.
Client Hello → Server Hello → 서버의 인증서 전송 → 클라이언트의 인증서 검증 → 대칭키 교환 → 암호화된 데이터 통신 시작 순으로 진행됩니다.


SSL 인증서의 주요 구성요소는?
도메인 이름, 인증서 발급자(CA), 유효기간, 공개키, 디지털 서명이 포함됩니다. 이를 통해 웹사이트의 신원과 보안을 보증합니다.


HTTPS와 HTTP의 차이점은?
HTTPS는 HTTP에 SSL/TLS 보안계층을 추가한 것으로, 데이터 암호화를 제공하며 443포트를 사용합니다. HTTP는 암호화되지 않은 80포트 통신입니다.


HTTP/3가 UDP를 선택한 이유와 그 장점에 대해 설명해주세요.
HTTP/3는 기존의 TCP 대신 UDP 기반의 QUIC 프로토콜을 사용합니다. 이는 TCP의 3-way handshake로 인한 연결 설정 시간을 줄이고, 더 많은 HTTP 데이터를 효율적으로 전송하기 위함입니다. UDP를 사용함으로써 연결 설정 시간이 단축되고, 네트워크 전환 시에도 연결이 유지되는 등의 장점이 있습니다.


프라이빗 캐시와 셰어드 캐시의 차이점과 각각의 활용 사례를 설명해주세요.
프라이빗 캐시는 웹 브라우저에 저장되는 개인용 캐시로, 특정 사용자의 반복적인 리소스 요청을 최적화하는 데 사용됩니다. 반면 셰어드 캐시는 프록시 서버나 CDN의 에지 서버에 저장되어 여러 사용자가 공유하는 캐시로, 서버 부하를 줄이고 전체적인 응답 시간을 개선하는 데 활용됩니다.


쿠키와 세션의 동작 방식과 차이점을 설명해주세요.
쿠키는 클라이언트 측에 저장되는 데이터로, 서버가 Set-Cookie 헤더를 통해 클라이언트에게 저장을 요청합니다. 이후 클라이언트는 Cookie 헤더를 통해 저장된 쿠키를 서버에 전송합니다. 세션은 서버 측에서 관리되며, 세션 ID는 쿠키를 통해 클라이언트에 전달됩니다. 이를 통해 상태가 없는 HTTP 프로토콜에서 상태 유지가 가능해집니다.


Connection: keep-alive가 HTTP/1.1에서 기본값으로 설정된 이유는 무엇인가요?
HTTP/1.1에서는 매 요청마다 새로운 TCP 연결을 생성하는 것이 성능상 비효율적이라는 점을 인식하여 Connection: keep-alive를 기본값으로 설정했습니다. 이를 통해 동일한 서버로의 여러 요청을 하나의 TCP 연결로 처리할 수 있게 되어 연결 설정에 드는 오버헤드를 크게 줄일 수 있습니다.


쿠키의 Secure와 HttpOnly 플래그가 보안에 어떤 영향을 미치는지 설명해주세요.
Secure 플래그는 HTTPS 연결에서만 쿠키가 전송되도록 제한하여 중간자 공격을 방지하고, HttpOnly 플래그는 JavaScript를 통한 쿠키 접근을 차단하여 XSS 공격으로부터 쿠키를 보호합니다. 이 두 옵션을 적절히 활용하면 웹 애플리케이션의 보안성을 크게 향상시킬 수 있습니다.
